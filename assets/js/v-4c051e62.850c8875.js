"use strict";(self.webpackChunkLunarVim_com=self.webpackChunkLunarVim_com||[]).push([[565],{7811:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-4c051e62",path:"/Payment_Systems/01-ach.html",title:"ACH",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"About",slug:"about",children:[]},{level:2,title:"commercial()",slug:"commercial",children:[{level:3,title:"About",slug:"about-1",children:[]},{level:3,title:"Example use",slug:"example-use",children:[]}]},{level:2,title:"government()",slug:"government",children:[{level:3,title:"About",slug:"about-2",children:[]},{level:3,title:"Example use",slug:"example-use-1",children:[]}]},{level:2,title:"all()",slug:"all",children:[{level:3,title:"About",slug:"about-3",children:[]},{level:3,title:"Example use",slug:"example-use-2",children:[]}]}],filePathRelative:"Payment_Systems/01-ach.md",git:{updatedTime:1636180046e3,contributors:[{name:"Antonio Hickey",email:"antoniohickey99@gmail.com",commits:1}]}}},3582:(n,a,s)=>{s.r(a),s.d(a,{default:()=>t});const e=(0,s(6252).uE)('<h1 id="ach" tabindex="-1"><a class="header-anchor" href="#ach" aria-hidden="true">#</a> ACH</h1><h2 id="about" tabindex="-1"><a class="header-anchor" href="#about" aria-hidden="true">#</a> About</h2><p>The automated clearinghouse (ACH) system is a nationwide network through which depository institutions send each other batches of electronic credit and debit transfers.</p><p>FedPy grants you the ability to quickly and seamlessly fetch this data for your desired use.</p><h2 id="commercial" tabindex="-1"><a class="header-anchor" href="#commercial" aria-hidden="true">#</a> commercial()</h2><h3 id="about-1" tabindex="-1"><a class="header-anchor" href="#about-1" aria-hidden="true">#</a> About</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>FedPy<span class="token punctuation">.</span>ACH<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>commercial<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Returns a <code>DataFrame</code> of annual commercial ACH data, and takes in no parameters.</p><h3 id="example-use" tabindex="-1"><a class="header-anchor" href="#example-use" aria-hidden="true">#</a> Example use</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> FedPy\n\nach_comm <span class="token operator">=</span> FedPy<span class="token punctuation">.</span>ACH<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>commercial<span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>ach_comm<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="output" tabindex="-1"><a class="header-anchor" href="#output" aria-hidden="true">#</a> Output:</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Year  ... Average value per transaction (dollars)\n2020  ...                                    1900\n2019  ...                                    1802\n2018  ...                                    1760\n2017  ...                                    1702\n2016  ...                                    1680\n2015  ...                                    1672\n2014  ...                                    1712\n2013  ...                                    1767\n2012  ...                                    1809\n2011  ...                                    1720\n...   ...                                    ...\n1989  ...                                    5182\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="government" tabindex="-1"><a class="header-anchor" href="#government" aria-hidden="true">#</a> government()</h2><h3 id="about-2" tabindex="-1"><a class="header-anchor" href="#about-2" aria-hidden="true">#</a> About</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>FedPy<span class="token punctuation">.</span>ACH<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>government<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Returns a <code>DataFrame</code> of annual government ACH data, and takes in no parameters.</p><h3 id="example-use-1" tabindex="-1"><a class="header-anchor" href="#example-use-1" aria-hidden="true">#</a> Example use</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> FedPy\n\nach_gov <span class="token operator">=</span> FedPy<span class="token punctuation">.</span>ACH<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>government<span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>ach_gov<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="output-1" tabindex="-1"><a class="header-anchor" href="#output-1" aria-hidden="true">#</a> Output:</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Year  ... Average value per transaction (dollars)\n2020  ...                                    3648\n2019  ...                                    3396\n2018  ...                                    3306\n2017  ...                                    3296\n2016  ...                                    3257\n2015  ...                                    3245\n2014  ...                                    3214\n2013  ...                                    3214\n2012  ...                                    3336\n2011  ...                                    3476\n...   ...                                    ...\n1989  ...                                     887\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="all" tabindex="-1"><a class="header-anchor" href="#all" aria-hidden="true">#</a> all()</h2><h3 id="about-3" tabindex="-1"><a class="header-anchor" href="#about-3" aria-hidden="true">#</a> About</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>FedPy<span class="token punctuation">.</span>ACH<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Returns a <code>DataFrame</code> of annual commercial &amp; government ach data aggregated, and takes in no parameters.</p><h3 id="example-use-2" tabindex="-1"><a class="header-anchor" href="#example-use-2" aria-hidden="true">#</a> Example use</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> FedPy\n\nach_all <span class="token operator">=</span> FedPy<span class="token punctuation">.</span>ACH<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>ach_all<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="output-2" tabindex="-1"><a class="header-anchor" href="#output-2" aria-hidden="true">#</a> Output:</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Year  Volume (millions of items)  ...  Average daily value (billions of dollars)  Average value per transaction (dollars)\n2020                     18427.0  ...                                      149.6                                   5548.0\n2019                     17288.0  ...                                      135.0                                   5198.0\n2018                     16360.0  ...                                      125.0                                   5066.0\n2017                     15378.0  ...                                      115.1                                   4998.0\n2016                     14554.0  ...                                      107.4                                   4937.0\n2015                     13856.0  ...                                      102.0                                   4917.0\n...                      ...      ...                                       ...                                    ...\n1989                      1182.0  ...                                       17.1                                   6069.0\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',28),l={},t=(0,s(3744).Z)(l,[["render",function(n,a){return e}]])},3744:(n,a)=>{a.Z=(n,a)=>{const s=n.__vccOpts||n;for(const[n,e]of a)s[n]=e;return s}}}]);
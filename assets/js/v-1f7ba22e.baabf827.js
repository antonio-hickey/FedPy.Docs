"use strict";(self.webpackChunkLunarVim_com=self.webpackChunkLunarVim_com||[]).push([[997],{4073:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-1f7ba22e",path:"/FRED/get_series.html",title:"get_series()",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"About",slug:"about",children:[]},{level:3,title:"Example use",slug:"example-use",children:[]}],filePathRelative:"FRED/get_series.md",git:{updatedTime:1636186364e3,contributors:[{name:"Antonio Hickey",email:"antoniohickey99@gmail.com",commits:1}]}}},9343:(s,n,a)=>{a.r(n),a.d(n,{default:()=>p});const e=(0,a(6252).uE)('<h1 id="get-series" tabindex="-1"><a class="header-anchor" href="#get-series" aria-hidden="true">#</a> get_series()</h1><h3 id="about" tabindex="-1"><a class="header-anchor" href="#about" aria-hidden="true">#</a> About</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>FedPy<span class="token punctuation">.</span>FRED<span class="token punctuation">(</span>api_key<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_series<span class="token punctuation">(</span>series_id<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token operator">*</span>start<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>end<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Returns a <code>DataFrame</code> for a given <code>series_id</code>, but requires you have an API key which is free sign up at https://fred.stlouisfed.org</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters:</h4><ul><li><p><code>series_id</code> : string of series id which can be found @ https://fred.stlouisfed.org</p></li><li><p><code>start</code> : <strong>optional</strong> string of start date, Defaults to blank string which sets the start date as far back as the series goes.</p></li><li><p><code>end</code> : <strong>optional</strong> string of end date, Defaults to blank string which sets the end date to as present as the series gets.</p></li></ul><h3 id="example-use" tabindex="-1"><a class="header-anchor" href="#example-use" aria-hidden="true">#</a> Example use</h3><p>Let&#39;s fetch data on Commercial and Industrial Loans, All Commercial Banks from beginning of series to present day.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> FedPy\n\nFRED <span class="token operator">=</span> FedPy<span class="token punctuation">.</span>FRED<span class="token punctuation">(</span>\n  api_key <span class="token operator">=</span> <span class="token string">&quot;*YOUR API KEY*&quot;</span>\n<span class="token punctuation">)</span>\nLIBOR <span class="token operator">=</span> FRED<span class="token punctuation">.</span>get_series<span class="token punctuation">(</span><span class="token string">&quot;TOTCI&quot;</span><span class="token punctuation">)</span> <span class="token comment">#&quot;TOTCI&quot; is the series_id</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>LIBOR<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><em>NOTE</em> : We didn&#39;t set a start or end date so it defaults to all.</p><h4 id="output" tabindex="-1"><a class="header-anchor" href="#output" aria-hidden="true">#</a> Output:</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1973-01-03     134.0421\n1973-01-10     134.4069\n1973-01-17     134.9826\n1973-01-24     135.8008\n1973-01-31     137.0512\n...           ...    \n2021-09-29    2431.7251\n2021-10-06    2424.3470\n2021-10-13    2423.9121\n2021-10-20    2428.9191\n2021-10-27    2434.2663\nLength: 2548, dtype: float64\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',12),t={},p=(0,a(3744).Z)(t,[["render",function(s,n){return e}]])},3744:(s,n)=>{n.Z=(s,n)=>{const a=s.__vccOpts||s;for(const[s,e]of n)a[s]=e;return a}}}]);